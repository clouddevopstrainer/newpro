# --------------------- START MONITORING STACK ---------------------
- name: üöÄ Deploy Prometheus, Grafana, Node Exporter
  hosts: all
  become: yes
  tasks:

    - name: Ensure /opt/monitoring directory exists
      file:
        path: /opt/monitoring
        state: directory
        mode: '0755'

    - name: Clean old monitoring containers and free ports
      shell: |
        set -e
        echo "üßπ Cleaning old monitoring containers..."
        sudo docker ps -a --format '{{.Names}}' | grep -E 'monitoring-|prometheus|grafana|node_exporter' | xargs -r sudo docker rm -f || true

        echo "üßπ Freeing ports 3000, 9090, 9100..."
        for port in 3000 9090 9100; do
          pid=$(sudo lsof -t -i:$port || true)
          if [ -n "$pid" ]; then
            echo "‚ö†Ô∏è Killing process using port $port (PID: $pid)"
            sudo kill -9 $pid || true
          fi
        done

        echo "üßπ Cleaning Docker networks, volumes, and system..."
        sudo docker network prune -f || true
        sudo docker volume prune -f || true
        sudo docker system prune -f || true
      args:
        warn: false

    - name: Copy Prometheus configuration file
      copy:
        dest: /opt/monitoring/prometheus.yml
        content: |
          global:
            scrape_interval: 15s
          scrape_configs:
            - job_name: 'prometheus'
              static_configs:
                - targets: ['monitoring-prometheus:9090']
            - job_name: 'node_exporter'
              static_configs:
                - targets: ['monitoring-node_exporter:9100']

    - name: Copy docker-compose.yml for monitoring stack
      copy:
        dest: /opt/monitoring/docker-compose.yml
        content: |
          version: "3.9"
          services:
            prometheus:
              image: prom/prometheus
              container_name: monitoring-prometheus
              ports:
                - "9090:9090"
              volumes:
                - ./prometheus.yml:/etc/prometheus/prometheus.yml
              restart: unless-stopped

            grafana:
              image: grafana/grafana
              container_name: monitoring-grafana
              ports:
                - "3000:3000"
              environment:
                - GF_SECURITY_ADMIN_USER=admin
                - GF_SECURITY_ADMIN_PASSWORD=admin
              restart: unless-stopped

            node_exporter:
              image: prom/node-exporter
              container_name: monitoring-node_exporter
              ports:
                - "9100:9100"
              volumes:
                - /proc:/host/proc:ro
                - /sys:/host/sys:ro
                - /:/rootfs:ro
              command:
                - '--path.procfs=/host/proc'
                - '--path.sysfs=/host/sys'
                - '--path.rootfs=/rootfs'
              restart: unless-stopped

    - name: Start monitoring stack
      shell: |
        set -e
        cd /opt/monitoring
        echo "üöÄ Deploying monitoring stack..."
        sudo docker compose up -d --remove-orphans

    - name: Wait for Prometheus to be healthy
      shell: |
        echo "‚è≥ Waiting for Prometheus to be ready..."
        until curl -s http://localhost:9090/-/ready | grep "Prometheus is Ready"; do
          echo "Waiting 5s..."
          sleep 5
        done
        echo "‚úÖ Prometheus is ready"

    - name: Wait for Grafana to be healthy
      shell: |
        echo "‚è≥ Waiting for Grafana to be ready..."
        until curl -s http://localhost:3000/api/health | grep '"database":"ok"'; do
          echo "Waiting 5s..."
          sleep 5
        done
        echo "‚úÖ Grafana is ready"

    - name: List running monitoring containers
      shell: |
        sudo docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

