---
- name: ðŸš€ Deploy Monitoring Stack
  hosts: all
  become: yes
  tasks:

    - name: Ensure /opt/monitoring directory exists
      file:
        path: /opt/monitoring
        state: directory
        mode: '0755'

    - name: Stop old monitoring containers
      ansible.builtin.shell: |
        containers=$(sudo docker ps -a --format '{{"{{.Names}}"}}' | grep -E 'monitoring-|prometheus|grafana|node_exporter' || true)
        if [ -n "$containers" ]; then
          echo "ðŸ§¹ Removing old monitoring containers..."
          echo "$containers" | xargs -r sudo docker rm -f
        fi
      args:
        executable: /bin/bash

    - name: Remove old monitoring networks and volumes
      ansible.builtin.shell: |
        sudo docker network prune -f || true
        sudo docker volume prune -f || true
        sudo docker system prune -f || true
      args:
        executable: /bin/bash

    - name: Copy Prometheus configuration
      copy:
        dest: /opt/monitoring/prometheus.yml
        content: |
          global:
            scrape_interval: 15s
          scrape_configs:
            - job_name: 'prometheus'
              static_configs:
                - targets: ['prometheus:9090']
            - job_name: 'node_exporter'
              static_configs:
                - targets: ['node_exporter:9100']

    - name: Copy Docker Compose file
      copy:
        dest: /opt/monitoring/docker-compose.yml
        content: |
          version: "3"
          services:
            prometheus:
              image: prom/prometheus
              container_name: monitoring-prometheus
              ports:
                - "9090:9090"
              volumes:
                - ./prometheus.yml:/etc/prometheus/prometheus.yml
              restart: always

            grafana:
              image: grafana/grafana
              container_name: monitoring-grafana
              ports:
                - "3000:3000"
              environment:
                - GF_SECURITY_ADMIN_USER=admin
                - GF_SECURITY_ADMIN_PASSWORD=admin
              restart: always

            node-exporter:
              image: prom/node-exporter
              container_name: monitoring-node_exporter
              ports:
                - "9100:9100"
              volumes:
                - /proc:/host/proc:ro
                - /sys:/host/sys:ro
                - /:/rootfs:ro
              command:
                - '--path.procfs=/host/proc'
                - '--path.sysfs=/host/sys'
                - '--path.rootfs=/rootfs'
              restart: always

    - name: Start monitoring stack
      ansible.builtin.shell: |
        cd /opt/monitoring
        sudo docker compose up -d --remove-orphans
        echo "âœ… Monitoring stack deployed successfully"
      args:
        executable: /bin/bash
