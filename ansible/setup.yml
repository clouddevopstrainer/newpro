---
- name: Setup EC2 Server
  hosts: all
  become: yes

  tasks:
    - name: ðŸ”¥ Clean any leftover Docker repo files or entries
      shell: |
        sudo rm -f /etc/apt/sources.list.d/docker.list
        sudo rm -f /etc/apt/sources.list.d/*docker*.list
        sudo sed -i '/download.docker.com/d' /etc/apt/sources.list || true
        sudo apt-get clean
        sudo apt-get update -y
      ignore_errors: yes

    - name: Install prerequisite packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
        update_cache: yes

    - name: Ensure Docker keyring directory exists
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Dockerâ€™s official GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: Add Docker repository cleanly
      shell: |
        echo \
        "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] \
        https://download.docker.com/linux/ubuntu jammy stable" \
        | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Update apt cache after adding Docker repo
      shell: sudo apt-get update -o Dir::Etc::sourcelist="sources.list.d/docker.list" -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0"

    - name: Install Docker and Docker Compose
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present

    - name: Enable and start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Verify Docker installation
      shell: docker --version
      register: docker_version
      changed_when: false

    - debug:
        msg: "âœ… Docker installed successfully: {{ docker_version.stdout }}"

    # ðŸ§¹ --- ADD THIS SECTION BELOW TO CLEAN OLD MONITORING STACK ---
    - name: ðŸ§¹ Stop and remove any old monitoring containers
      shell: |
        sudo docker ps -aq --filter "name=monitoring-" | xargs -r sudo docker rm -f
      ignore_errors: yes

    - name: ðŸ§¹ Free ports 3000, 9090, 9100 (Grafana, Prometheus, Node Exporter)
      shell: |
        for port in 3000 9090 9100; do
          sudo lsof -ti tcp:$port | xargs -r sudo kill -9 || true
        done
      ignore_errors: yes

    # ðŸ§  --- OPTIONAL: Confirm ports are free ---
    - name: Verify that monitoring ports are free
      shell: |
        sudo netstat -tuln | grep -E "3000|9090|9100" || echo "âœ… All monitoring ports are free."
      register: port_status
      changed_when: false
    - debug:
        msg: "{{ port_status.stdout_lines }}"

    # ðŸš€ --- START MONITORING STACK ---
    - name: Create monitoring directory
      file:
        path: /opt/monitoring
        state: directory
        mode: '0755'

    - name: Copy docker-compose file for Prometheus, Grafana, Node Exporter
      copy:
        dest: /opt/monitoring/docker-compose.yml
        content: |
          version: "3"
          services:
            prometheus:
              image: prom/prometheus
              ports:
                - "9090:9090"
              volumes:
                - ./prometheus.yml:/etc/prometheus/prometheus.yml
              restart: always

            grafana:
              image: grafana/grafana
              ports:
                - "3000:3000"
              environment:
                - GF_SECURITY_ADMIN_USER=admin
                - GF_SECURITY_ADMIN_PASSWORD=admin
              restart: always

            node_exporter:
              image: prom/node-exporter
              ports:
                - "9100:9100"
              restart: always

    - name: Copy Prometheus configuration
      copy:
        dest: /opt/monitoring/prometheus.yml
        content: |
          global:
            scrape_interval: 15s
          scrape_configs:
            - job_name: "prometheus"
              static_configs:
                - targets: ["localhost:9090"]
            - job_name: "node_exporter"
              static_configs:
                - targets: ["localhost:9100"]

    - name: Start monitoring stack
      shell: |
        cd /opt/monitoring
        sudo docker compose up -d
